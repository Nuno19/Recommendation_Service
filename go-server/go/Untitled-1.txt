	/*
		fitted := kmean.Fit(tf_idf.GetAllPointsTFIDF())
		if !fitted {
			http.Error(w, "Couldn't fit points in centroids!", http.StatusInternalServerError)
			return
		}
		dir, err := os.Create("files/")
		defer dir.Close()
		dir.Sync()

		s := "files/Items.txt"

		f, err := os.Create(s)
		check(err)

		for i, l := range cList {
			vals := strings.Split(l, "\t")
			m := map[string]string{}

			for j, lab := range types {
				m[lab] = strings.ReplaceAll(vals[j], "\"", "")
			}

			js, err := json.Marshal(m)
			check(err)

			item, err := json.Marshal(Item{Id: strconv.Itoa(i), Data: string(js), BelongsTo: kmean.Labels[i]})
			check(err)

			f.Write(item)
			f.WriteString("\n")

			f.Sync()
		}
		f.Close()
		lastIdx += len(list)
		sse := kmean.ComputeSSE()

		fmt.Printf("LabelCount: %s Error: %f\n", fmt.Sprint(kmean.LabelCount()), sse)
		js, _ := json.Marshal(map[string]string{"Status": "Success", "SSE": fmt.Sprintf("%f", sse), "LabelCounts": fmt.Sprint(kmean.LabelCount())})

		w.WriteHeader(http.StatusOK)
		w.Write(js)
	*/